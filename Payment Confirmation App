<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Confirmation</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: #f0f2f5;
        }
        .container {
            background-color: #ffffff;
            padding: 2.5rem;
            border-radius: 1rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            text-align: center;
            max-width: 90%;
            width: 400px;
        }
        .message-box {
            background-color: #e0f2f7; /* Light blue */
            border: 1px solid #b3e5fc; /* Slightly darker blue */
            color: #01579b; /* Dark blue text */
            padding: 1rem;
            border-radius: 0.5rem;
            margin-bottom: 1.5rem;
            display: none; /* Hidden by default */
            font-weight: 500;
        }
        .message-box.success {
            background-color: #e8f5e9; /* Light green */
            border-color: #c8e6c9; /* Slightly darker green */
            color: #2e7d32; /* Dark green text */
        }
        .message-box.error {
            background-color: #ffebee; /* Light red */
            border-color: #ffcdd2; /* Slightly darker red */
            color: #c62828; /* Dark red text */
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="text-3xl font-bold mb-6 text-gray-800">Confirm Payment</h1>
        <p class="text-gray-600 mb-8">Click the button below to confirm your payment request.</p>

        <div id="messageBox" class="message-box"></div>

        <button id="confirmButton" class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-75">
            Confirm Request
        </button>
    </div>

    <script>
        // Get references to DOM elements
        const confirmButton = document.getElementById('confirmButton');
        const messageBox = document.getElementById('messageBox');

        /**
         * Displays a message in the message box.
         * @param {string} message - The message to display.
         * @param {string} type - The type of message ('success', 'error', or '').
         */
        function displayMessage(message, type = '') {
            messageBox.textContent = message;
            messageBox.className = `message-box ${type}`; // Reset and apply new class
            messageBox.style.display = 'block'; // Show the message box
        }

        /**
         * Hides the message box.
         */
        function hideMessage() {
            messageBox.style.display = 'none';
            messageBox.textContent = '';
            messageBox.className = 'message-box'; // Reset classes
        }

        /**
         * Simulates a payment confirmation request.
         * This function addresses the original error by ensuring 'totalToDeduct' is defined.
         * @param {string} requestId - The ID of the streaming payment request.
         */
        async function confirmRequest(requestId) {
            // Initialize totalToDeduct to 0 or a default value.
            // This line fixes the "totalToDeduct is not defined" error.
            let totalToDeduct = 0; 

            // In a real application, you would fetch or calculate the actual totalToDeduct
            // For demonstration purposes, let's assign a value.
            totalToDeduct = 125.50; // Example value

            console.log(`Attempting to confirm request: ${requestId}`);
            console.log(`Total to deduct: $${totalToDeduct}`);

            try {
                // Simulate an asynchronous operation, e.g., an API call
                await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay

                if (totalToDeduct > 0) {
                    displayMessage(`Payment request #${requestId} confirmed successfully! Amount: $${totalToDeduct.toFixed(2)}`, 'success');
                } else {
                    displayMessage(`Error: Invalid amount for request #${requestId}.`, 'error');
                }
            } catch (error) {
                console.error("Error confirming request:", error);
                displayMessage(`Error confirming request #${requestId}: ${error.message}`, 'error');
            }
        }

        // Event listener for the confirm button
        confirmButton.addEventListener('click', async () => {
            hideMessage(); // Clear any previous messages
            const requestId = '1htDAxkaWypg7ELHG8Mq'; // Example request ID
            await confirmRequest(requestId);
        });

        // Initialize the app on window load
        window.onload = function() {
            console.log("Payment Confirmation App Loaded.");
        };
    </script>
</body>
</html>
